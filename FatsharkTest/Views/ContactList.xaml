<UserControl x:Class="FatsharkTest.Views.ContactList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="350">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SharedStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <ControlTemplate x:Key="ButtonTemplate1" TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource BorderColor}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{StaticResource BackplateColor}">
        <Border />
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Text="Contact List" FontSize="24" Grid.Row="0" Margin="20 10 20 0 "></TextBlock>
            <DataGrid Grid.Row="1" Margin="20 20 20 0" ItemsSource="{Binding ContactsListView}" AlternationCount="2"
                      IsReadOnly="False" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="Auto" IsReadOnly="True"/>
                    <DataGridTextColumn Header="First Name" Binding="{Binding FirstName, Mode=TwoWay}" Width="Auto" />
                    <DataGridTextColumn Header="Last Name" Binding="{Binding LastName, Mode=TwoWay}" Width="Auto" />
                    <DataGridTextColumn Header="Email" Binding="{Binding Email, Mode=TwoWay}" Width="Auto" />
                    <DataGridTextColumn Header="County" Binding="{Binding County, Mode=TwoWay}" Width="Auto" />
                    <DataGridTextColumn Header="Postal" Binding="{Binding Postal}" Width="Auto" IsReadOnly="True" />
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="{StaticResource BackplateColor2}" />
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{StaticResource BackplateColor}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="CellEditEnding">
                        <i:InvokeCommandAction Command="{Binding OnCellEditEndingCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10">
                <Button Template="{DynamicResource ButtonTemplate1}" Content="Previous" Command="{Binding PreviousPageCommand}" Margin="5"/>
                <TextBlock Text= "1 :"  Margin="5"></TextBlock>
                <TextBlock Text="{Binding CurrentPage, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>
                <TextBlock Text= ":"  Margin="5"></TextBlock>
                <TextBlock Text= "{Binding TotalPages, UpdateSourceTrigger=PropertyChanged}"  Margin="0 5"></TextBlock>
                <Button Template="{DynamicResource ButtonTemplate1}" Content="Next" Command="{Binding NextPageCommand}" Margin="5"/>
            </StackPanel>
        </Grid>

    </Grid>
</UserControl>